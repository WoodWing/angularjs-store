!(function(t, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = n())
    : 'function' == typeof define && define.amd
    ? define(n)
    : ((t = t || self).NgStore = n());
})(this, function() {
  'use strict';
  var t = (function() {
      function t(t, n) {
        var e = this;
        (this.$$called = !1),
          (this.matches = function(t) {
            return e.$$match(t);
          }),
          (this.$$match = t),
          (this.$$callback = n);
      }
      return (
        (t.prototype.run = function(t) {
          this.$$callback(t, !this.$$called), (this.$$called = !0);
        }),
        t
      );
    })(),
    n = (function() {
      function t(t) {
        this.$$destroyer = t;
      }
      return (
        (t.prototype.destroy = function() {
          this.$$destroyer();
        }),
        (t.prototype.destroyOn = function(t) {
          var n = this;
          t.$on('$destroy', function() {
            n.$$destroyer();
          });
        }),
        t
      );
    })();
  return (function() {
    function e(t) {
      var n, e;
      (this.$$hooks = []),
        (this.$$stateHolder =
          ((n = t),
          (e = angular.copy(n)),
          {
            get: function() {
              return angular.copy(e);
            },
            set: function(t) {
              for (var n in t) t.hasOwnProperty(n) && n in e && (e[n] = angular.copy(t[n]));
            },
          }));
    }
    return (
      (e.prototype.copy = function() {
        return this.$$stateHolder.get();
      }),
      (e.prototype.hook = function(e, o) {
        var r,
          i = this;
        if ('string' == typeof e)
          r =
            '*' === e
              ? function() {
                  return !0;
                }
              : function(t) {
                  return t === e;
                };
        else if (Array.isArray(e)) {
          r = function(t) {
            return e.includes(t);
          };
        } else {
          if (!(e instanceof RegExp)) throw new TypeError('Invalid hook query.');
          r = function(t) {
            return e.test(t);
          };
        }
        if (!angular.isFunction(o)) throw new TypeError('Invalid hook callback.');
        var s = new t(r, o);
        return (
          this.$$hooks.push(s),
          s.run(this.$$stateHolder.get()),
          new n(function() {
            i.$$hooks.splice(i.$$hooks.indexOf(s), 1);
          })
        );
      }),
      (e.prototype.dispatch = function(t, n) {
        var e = angular.isFunction(n) ? n(this.$$stateHolder.get()) : n;
        this.$$stateHolder.set(e);
        var o = this.$$stateHolder.get();
        this.$$hooks
          .filter(function(n) {
            return n.matches(t);
          })
          .forEach(function(t) {
            t.run(o);
          });
      }),
      e
    );
  })();
});
//# sourceMappingURL=angularjs-store.min.js.map
