{"version":3,"file":"angularjs-store.js","sources":["../../src/models/hook.ts","../../src/models/hook-link.ts","../../src/models/state-holder.ts","../../src/angularjs-store.ts"],"sourcesContent":["export type HookMatcher = (action: string) => boolean;\n\nexport type HookCallback<State> = (state: Readonly<State>, initialRun: boolean) => void;\n\nexport default class Hook<State> {\n  private $$match: HookMatcher;\n  private $$callback: HookCallback<State>;\n  private $$called = false;\n\n  /**\n   * Create a Hook.\n   * @param matcher Function that test the dispatched action.\n   * @param callback Callback function that trigger when action passed to matcher.\n   */\n  constructor(matcher: HookMatcher, callback: HookCallback<State>) {\n    this.$$match = matcher;\n    this.$$callback = callback;\n  }\n\n  /**\n   * Run the registered callback when action passed to matcher.\n   * @param action Action name.\n   * @param state A state to pass in callback.\n   */\n  public run(state: Readonly<State>) {\n    this.$$callback(state, !this.$$called);\n    this.$$called = true;\n  }\n\n  public matches = (action: string) => this.$$match(action);\n}\n","import { IScope } from 'angular';\n\nexport default class HookLink {\n  private $$destroyer: () => void;\n\n  /**\n   * Create a HookLink.\n   * @param destroyer Destroyer function.\n   */\n  constructor(destroyer: () => void) {\n    this.$$destroyer = destroyer;\n  }\n\n  /**\n   * Invoke the destroyer function.\n   */\n  public destroy() {\n    this.$$destroyer();\n  }\n\n  /**\n   * Bind hook to scope. Automatically destroy the hook link when scope destroyed.\n   * @param scope The scope where to bound the HookLink.\n   */\n  public destroyOn(scope: IScope) {\n    scope.$on('$destroy', () => {\n      this.$$destroyer();\n    });\n  }\n}\n","export interface StateHolder<State> {\n  /**\n   * Get a new copy of state.\n   */\n  get(): State;\n\n  /**\n   * Update the current state.\n   * @param partialState New partial state.\n   */\n  set(partialState: Partial<State>): void;\n}\n\nexport default function holdState<State>(state: State): StateHolder<State> {\n  const $$state = angular.copy(state);\n\n  const get = () => {\n    return angular.copy($$state);\n  };\n\n  const set = (partialState: Partial<State>) => {\n    for (const key in partialState) {\n      if (partialState.hasOwnProperty(key) && key in $$state) {\n        $$state[key] = angular.copy(partialState[key])!;\n      }\n    }\n  };\n\n  return { get, set };\n}\n","import Hook, { HookCallback, HookMatcher } from './models/hook';\nimport HookLink from './models/hook-link';\nimport holdState, { StateHolder } from './models/state-holder';\n\n/* istanbul ignore next */\nif (__DEV__) {\n  if (!angular) {\n    console.warn('Seems like you forgot to load angular. Make sure to load it first before the angularjs-store.');\n  }\n}\n\nexport type HookActionQuery<Actions extends string[] = string[]> =\n  | '*'\n  | Actions[number]\n  | Array<Actions[number] | '*'>\n  | RegExp;\n\ntype StateFactory<T> = (prevState: T) => Partial<T>;\n\nexport default class NgStore<State extends { [key: string]: any } = {}, Actions extends string[] = string[]> {\n  private $$stateHolder: StateHolder<State>;\n\n  /**\n   * All registered hooks from the store.\n   */\n  private $$hooks: Array<Hook<State>> = [];\n\n  /**\n   * Create a Store.\n   * @param initialState Initial state value.\n   */\n  constructor(initialState: State) {\n    /* istanbul ignore next */\n    if (__DEV__) {\n      if (Object.prototype.toString.call(initialState) !== '[object Object]') {\n        console.warn(\n          'Initializing the store with a non-object state is not recommended.\\n',\n          \"If you're trying to create a store with primitive type of state, try to wrap it with object.\",\n        );\n      }\n    }\n\n    this.$$stateHolder = holdState(initialState);\n  }\n\n  /**\n   * Get a new copy of state.\n   */\n  public copy(): State {\n    return this.$$stateHolder.get();\n  }\n\n  /**\n   * Attach a hook to the store and get notified everytime the given query matched to dispatched action.\n   * @param query A query for the dispatched action.\n   * @param callback Invoke when query match to dispatched action.\n   */\n  public hook(query: HookActionQuery<Actions>, callback: HookCallback<State>) {\n    let matcher: HookMatcher;\n\n    if (typeof query === 'string') {\n      matcher = query === '*' ? () => true : (action) => action === query;\n    } else if (Array.isArray(query)) {\n      /* istanbul ignore next */\n      if (__DEV__) {\n        const nonStringQueryItem = query.find((queryItem) => typeof queryItem !== 'string');\n\n        if (nonStringQueryItem) {\n          console.warn(\n            `Hook action query contains non-string value (${nonStringQueryItem}).\\n`,\n            'Using array as query must only contains string.',\n          );\n        }\n      }\n\n      matcher = (action) => query.includes(action);\n    } else if (query instanceof RegExp) {\n      matcher = (action) => query.test(action);\n    } else {\n      /* istanbul ignore next */\n      if (__DEV__) {\n        throw new Error('Hook action query must be a either string, array of string, or regular expression.');\n      }\n\n      /* istanbul ignore next */\n      throw new TypeError('Invalid hook query.');\n    }\n\n    if (!angular.isFunction(callback)) {\n      /* istanbul ignore next */\n      if (__DEV__) {\n        throw new Error('Hook callback must be a function.');\n      }\n\n      /* istanbul ignore next */\n      throw new TypeError('Invalid hook callback.');\n    }\n\n    const hook = new Hook<State>(matcher, callback);\n\n    this.$$hooks.push(hook);\n\n    // Initial run of hook.\n    hook.run(this.$$stateHolder.get());\n\n    return new HookLink(() => {\n      this.$$hooks.splice(this.$$hooks.indexOf(hook), 1);\n    });\n  }\n\n  /**\n   * Dispatch an action for updating state.\n   * @param action Action name.\n   * @param state New state of store.\n   */\n  public dispatch(action: Actions[number], state: Partial<State>): void;\n\n  /**\n   * Dispatch an action for updating state.\n   * @param action Action name.\n   * @param setState State setter.\n   */\n  public dispatch(action: Actions[number], setState: StateFactory<State>): void;\n\n  /**\n   * Implementation.\n   */\n  public dispatch(action: Actions[number], state: Partial<State> | StateFactory<State>) {\n    const partialState: Partial<State> = angular.isFunction(state)\n      ? (state as StateFactory<State>)(this.$$stateHolder.get())\n      : state as Partial<State>;\n\n    /* istanbul ignore next */\n    if (__DEV__) {\n      if (Object.prototype.toString.call(partialState) !== '[object Object]') {\n        console.warn(\n          \"You're about to update the state using a non-object value.\\n\",\n          'Did you use non-object state?\\n',\n          \"If yes, it's not recommended.\\n\",\n          'Primitive type state must wrap with object.',\n        );\n      }\n    }\n\n    this.$$stateHolder.set(partialState);\n\n    // Only create one copy of the state for all hooks for performance reasons, hooks should never modify the passed state object\n    const newState = this.$$stateHolder.get();\n\n    this.$$hooks\n      .filter(hook => hook.matches(action))\n      .forEach(hook => {\n        hook.run(newState);\n      });\n  }\n}\n"],"names":[],"mappings":"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"}